import agents.interfaces.Do
import agents.interfaces.IGetThread
import generalStructure.interfaces.CycleAlert
import agents.Suicide

namespace general{

	ecosystem EcoAgentsEtat{
		requires threads: IGetThread
		
		species AgentEtat(id: String){
			
			
			
			part act: Act{
				bind finishedCycle to finishedCycle
			}
	
			part decide: Decide{
				bind action to act.action
			}
	
			part perceive: Perceive{
				bind decision to decide.decision
			}
			
			
			//requires getTraceElement: IGetAction
			
			provides cycle: Do = perceive.perception
			requires finishedCycle: CycleAlert

		}
		
		species AgentTransition(id:String){
			
		}
	}
	
	component Perceive{
		provides perception: Do
		requires decision: Do
	}
	
	component Decide{
		provides decision: Do
		requires action: Do
	}
	
	component Act{
		provides action: Do
		requires finishedCycle: CycleAlert
	}
		
	
}